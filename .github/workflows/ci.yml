# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  push:
    branches: [ "*" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Python 3.12: Waiting on https://github.com/grpc/grpc/issues/33063
        python-version: [ "3.10", "3.11" ]   #, "3.12-dev" ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        check-latest: true
    - name: Install dependencies
      run: |
        sudo apt-get -y install graphviz graphviz-dev
        pip install -r ./ci/requirements-dev.txt -r ./ci/requirements-extra.txt
    - name: Lint Check
      run: |
        ruff check --exit-zero .
        pylint --fail-under 9.0 finsy
        pyright || echo "Errors ignored for now."
    - name: Run Tests
      run: |
        pytest
    - name: Run Code Coverage
      run: |
        FINSY_TEST_NO_BENCHMARK=1 pytest --cov finsy
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
    - name: Format Check
      run: |
        black --check .
        isort --check .
    - name: Type Check
      run: |
        PYTHONPATH=. pyright --ignoreexternal --verifytypes finsy || echo "Not yet 100%."

  test-examples:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/byllyfish/demonet:23.07
      options: --privileged

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          . /etc/os-release
          echo "$PRETTY_NAME"
          mn --version
          python3 -m venv venv
          . venv/bin/activate
          pip install --no-cache-dir -r ./ci/requirements-dev.txt
      - name: Run tests
        run: |
          . venv/bin/activate
          pytest
          cd examples; PYTHONPATH=.. pytest -v -s -k simple
      - name: Run example tests with coverage
        run: |
          . venv/bin/activate
          cd examples; PYTHONPATH=.. pytest -k simple --cov ../finsy --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.FINSY_CODECOV_TOKEN }}
          directory: ./examples/
          root_dir: ${{ github.workspace }}
